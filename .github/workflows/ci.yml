name: ci

on: [push, pull_request]

jobs:

  pre-commit:

    runs-on: ubuntu-18.04
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install system dependencies
      run: |
        sudo rm -f /etc/apt/sources.list.d/dotnetdev.list /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt update
        sudo apt install libkrb5-dev ruby ruby-dev

    - name: Install python dependencies
      run: |
        pip install -e .[pre-commit,testing]
        pip freeze

    - name: Run pre-commit
      run:
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  ubuntu-apt:
    # ubuntu using postgresql installed via apt (+ pgtest)

    runs-on: ubuntu-18.04
    timeout-minutes: 5

    strategy:
      matrix:
        python-version: [2.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo rm -f /etc/apt/sources.list.d/dotnetdev.list /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt update
        sudo apt install postgresql-10

    - name: Install pgsu
      run: |
        pip install -e .[testing]
        pip freeze

    - name: Run test suite
      run: pytest

  ubuntu-postgres-action:
    # ubuntu using postgres docker container (custom action)

    runs-on: ubuntu-latest
    timeout-minutes: 5

    strategy:
      matrix:
        python-version: [3.8]
        postgres-pw: ["testpw"]

    steps:
    - uses: actions/checkout@v2
    - uses: CasperWA/postgresql-action@v1.2
      with:
        postgresql version: '10'
        postgresql db: test_db
        postgresql user: postgres
        postgresql password: ${{ matrix.postgres-pw}}
        #postgresql auth: trust

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install pgsu
      run: |
        pip install -e .[testing]
        pip freeze

    - name: Run test suite
      env:
        PGSU_TEST_PASSWORD: ${{ matrix.postgres-pw}}
      run: pytest

  ubuntu-postgres-service:
    # ubuntu using postgres docker container (service provided by github actions)

    runs-on: ubuntu-latest
    timeout-minutes: 5

    strategy:
      matrix:
        python-version: [3.8]
        postgres-pw: ["testpw"]

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTRGRES_USER: postgres
          POSTGRES_PASSWORD:  ${{ matrix.postgres-pw}}
          POSTGRES_DB: test_db
        ports:
        - 5432:5432
        options:  --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install pgsu
      run: |
        pip install -e .[testing]
        pip freeze

    - name: Run test suite
      env:
        PGSU_TEST_PASSWORD: ${{ matrix.postgres-pw}}
      run: pytest


  macos-brew:
    # macos using postgres installed via homebrew (+pgtest)

    runs-on: macos-10.15
    timeout-minutes: 5

    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        brew install postgresql || brew link --overwrite postgresql

    - name: Install pgsu
      run: |
        pip install -e .[testing]
        pip freeze

    # note: I tested this locally with *only* the homebrew postgres server running and it worked.
    # no idea why this does not work on github actions
    - name: Run test suite
      run: 
        brew services start postgresql
        brew services list
        pytest

  macos-conda:
    # macos with postgres installed via conda (+pgtest)

    runs-on: macos-10.15
    timeout-minutes: 5

    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - uses: s-weigand/setup-conda@v1
      with:
        activate-conda: False

    - name: Install system dependencies
      run: |
        conda install -y -c conda-forge postgresql==10.5
        initdb -D test_db
        pg_ctl -D test_db start

    - name: Install pgsu
      run: |
        pip install -e .[testing]
        pip freeze

    - name: Run test suite
      run: pytest


  #windows-service:
  #  # windows using postgres installed via homebrew (+pgtest)

  #  runs-on: windows-2019
  #  timeout-minutes: 5

  #  strategy:
  #    matrix:
  #      python-version: [3.8]

  #  steps:
  #  - uses: actions/checkout@v2

  #  - name: Set up Python ${{ matrix.python-version }}
  #    uses: actions/setup-python@v1
  #    with:
  #      python-version: ${{ matrix.python-version }}

  #  - name: Install system dependencies
  #    run: |
  #      brew install postgresql || brew link --overwrite postgresql
  #      brew services start postgresql
  #      brew services list

  #  - name: Install pgsu
  #    run: |
  #      pip install -e .[testing]
  #      pip freeze

  #  - name: Run test suite
  #    run: pytest

